{% set name = "scotch" %}
{% set version = "7.0.1" %}
{% set major = version.split('.')[0] %}
{% set minor = version.split('.')[1] %}

package:
  name: {{ name }}-pkgs
  version: {{ version }}

source:
  fn: {{ name }}-v{{ version }}.tar.gz
  url: https://gitlab.inria.fr/scotch/scotch/-/archive/v{{ version }}/scotch-v{{ version }}.tar.gz
  sha256: 0618e9bc33c02172ea7351600fce4fccd32fe00b3359c4aabb5e415f17c06fed
  patches:
    - 0001-Remove-unconditional-testing.patch
    - 0002-add-COMPONENT-labels-for-easier-split-installation.patch

build:
  skip: true  # [win]
  number: 0

outputs:
  - name: scotch
    build:
      script: ${RECIPE_DIR}/build-scotch.sh
      run_exports:
        - {{ pin_subpackage('scotch', max_pin='x.x.x') }}
      ignore_run_exports:
        - {{ mpi }}
    requirements:
      build:
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
        - {{ compiler('fortran') }}
        - cmake
        - make
        - {{ mpi }}  # [mpi == 'openmpi' and build_platform != target_platform]
      host:
        - bison <3.8
        - flex
        - zlib
        - bzip2
        - xz
        - {{ mpi }}
      run:
        - zlib

    test:
      requires:
        - {{ compiler('c') }}
      commands:
        {% for lib in [
          'scotch',
          'scotcherr',
          'scotcherrexit',
          'esmumps',
        ]
        %}
        - test -f "${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}"
        - test -f "${PREFIX}/lib/lib{{ lib }}-{{ major }}.{{ minor }}${SHLIB_EXT}"
        {% endfor %}
        - test -f "${PREFIX}/include/scotch.h"
        - test -f "${PREFIX}/include/scotchf.h"
        - test -f "${PREFIX}/include/esmumps.h"
        - test ! -f "${PREFIX}/include/metis.h"
  - name: scotchmetis
    build:
      script: cmake --install ./build --component=scotchmetis
      run_exports:
        - {{ pin_subpackage('scotchmetis', max_pin='x.x.x') }}
    requirements:
      build:
        - cmake
      run:
        - {{ pin_subpackage('scotch', exact=True) }}
  - name: ptscotchparmetis
    build:
      script: cmake --install ./build --component=ptscotchparmetis
      run_exports:
        - {{ pin_subpackage('ptscotchparmetis', max_pin='x.x.x') }}
    requirements:
      build:
        - cmake
      run:
        - {{ pin_subpackage('scotch', exact=True) }}
  - name: ptscotch
    build:
      script:
        - cmake --install ./build --component=ptscotch
        # there is no ptesmumps when using cmake
        - ln -s "libesmumps${SHLIB_EXT}" "$PREFIX/lib/libptesmumps${SHLIB_EXT}"
        - ln -s "libptesmumps${SHLIB_EXT}" "$PREFIX/lib/libptesmumps-{{ major }}.{{ minor }}${SHLIB_EXT}"
      run_exports:
        - {{ pin_subpackage('ptscotch', max_pin='x.x.x') }}
    requirements:
      build:
        - cmake
      host:
        - {{ mpi }}
        - {{ pin_subpackage("scotch", exact=True) }}
      run:
        - {{ pin_subpackage("scotch", exact=True) }}
    test:
      requires:
        - cmake
        - {{ compiler('c') }}
        - {{ compiler('cxx') }}
      commands:
        {% for lib in [
          'ptscotch',
          'ptscotcherr',
          'ptscotcherrexit',
          'ptesmumps',
        ]
        %}
        - test -f "${PREFIX}/lib/lib{{ lib }}${SHLIB_EXT}"
        - test -f "${PREFIX}/lib/lib{{ lib }}-{{ major }}.{{ minor }}${SHLIB_EXT}"
        {% endfor %}
        - test -f "${PREFIX}/include/ptscotch.h"
        - test -f "${PREFIX}/include/ptscotchf.h"
        - test -f "${PREFIX}/include/esmumps.h"
        - test ! -f "${PREFIX}/include/parmetis.h"
    about:
      summary: 'PT-SCOTCH: (Parallel) Static Mapping, Graph, Mesh and Hypergraph Partitioning, and Parallel and Sequential Sparse Matrix Ordering Package'



about:
  home: https://www.labri.fr/perso/pelegrin/scotch/
  license: CECILL-C
  license_file: doc/CeCILL-C_V1-en.txt
  summary: 'SCOTCH: Static Mapping, Graph, Mesh and Hypergraph Partitioning, and Parallel and Sequential Sparse Matrix Ordering Package'
  description: |
    Software package and libraries for sequential and parallel
    graph partitioning, static mapping and clustering, sequential
    mesh and hypergraph partitioning, and sequential and parallel
    sparse matrix block ordering.
  doc_url: http://gforge.inria.fr/docman/?group_id=248&dirid=326
  dev_url: https://gitlab.inria.fr/scotch/scotch

extra:
  recipe-maintainers:
    - basnijholt
    - dalcinl
    - minrk
    - davidbrochart
    - SylvainCorlay
    - Tobias-Fischer
    - matthiasdiener
